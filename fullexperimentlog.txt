Reusing configuration cache.
> Task :app:processResources NO-SOURCE
> Task :app:compileJava
> Task :app:classes

> Task :app:run
System info: 
# OS: Mac OS X; 15.0; aarch64
# JVM: Eclipse Adoptium; 21.0.5
# CPU: null; 8 "procs"
# Date: 2024-12-20T11:29:47+0100

=====================================================================
Task 1: Implement classical MergeSort recursively.
=====================================================================

A classic recursive top-down mergesort sorted an integer array of size 100000, using 1536507 comparisons

=====================================================================
Task 2: Design and perform an experiment that investigates if the
        running time of an implementation is proportional to the
        number of comparisons.
=====================================================================

------------------------------------------------
Experiment 1: Varying the number of comparisons by varying input size
              Perform a single run, dynamically find repetitions
Result is the number of comparisons. Param is the size of the input. Time is in nanoseconds.

# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
t2e1                     100         65,536               5,777           323.4          542          5.8
t2e1                     200         16,384              12,893           478.4        1,282          8.4
t2e1                     400          8,192              29,033         2,060.0        2,961         11.9
t2e1                     800          4,096              68,191        46,755.4        6,721         16.8
t2e1                   1,600          2,048             139,362         2,684.0       15,040         24.0
t2e1                   3,200          1,024             311,093        28,403.7       33,279         34.0
t2e1                   6,400            512             667,206         7,265.4       72,954         46.9
t2e1                  12,800            256           1,455,153        18,299.2      158,703         67.6
t2e1                  25,600             64           3,170,688        44,419.3      343,002        102.7
t2e1                  51,200             32           6,848,161       138,991.6      737,199         95.6
t2e1                 102,400             16          14,535,584       128,945.4    1,576,816        136.0
t2e1                 204,800              8          30,514,422       171,026.6    3,358,599        312.1
t2e1                 409,600              4          66,253,313       930,870.5    7,126,730        354.0
t2e1                 819,200              2         306,371,230    10,480,118.0   15,071,870        513.4

Results have been saved as CSV in the data/results folder.

------------------------------------------------
Experiment 2: Varying the number of comparisons by varying input order
              Array size is kept constant at 100000 elements
              Parameter corresponds to different kinds of array order. Parameter key:
                  0. Ordered
                  1. Inverted
                  2. 1%  of elements shuffled
                  3. 10% of elements shuffled
                  4. 50%  of elements shuffled
                  5. 80%  of elements shuffled
                  6. all elements shuffled
                  7. worst case: see Handler class for implementation

Experiment 2.1: Baseline experiment. Demonstrates that the techniques 
                perform equally well on all input (of type Integer[]).

# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
t2e2_1                     1            128           5,093,025        24,066.0      853,904          0.0
t2e2_1                     2            128           5,092,317        18,727.2      853,904          0.0
t2e2_1                     3            128           5,152,218       310,099.9      853,904          0.0
t2e2_1                     4            128           5,113,572        54,644.2      853,904          0.0
t2e2_1                     5            128           5,108,963        28,222.8      853,904          0.0
t2e2_1                     6            128           5,103,474        53,248.0      853,904          0.0
t2e2_1                     7            128           5,087,810        57,312.6      853,904          0.0
t2e2_1                     8            128           5,115,624       108,364.6      853,904          0.0

Experiment 2.2: Baseline experiment. Demonstrates that the techniques 
                perform equally well on all input (of type TestData[]).

# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
t2e2_2                     1            128           5,202,318       160,897.0      853,904          0.0
t2e2_2                     2            128           5,407,903       120,879.6      853,904          0.0
t2e2_2                     3            128           5,419,038        98,831.2      853,904          0.0
t2e2_2                     4            128           5,436,900        86,869.1      853,904          0.0
t2e2_2                     5            128           5,651,257       978,003.5      853,904          0.0
t2e2_2                     6            128           5,478,528        52,561.0      853,904          0.0
t2e2_2                     7            128           5,449,264        87,891.5      853,904          0.0
t2e2_2                     8            128           5,512,342       127,871.8      853,904          0.0
Experiment 2.3: Baseline experiment. Demonstrates that the techniques
                perform equally well on all input (of type TestData[] with random ID).

# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
t2e2_3                     1            128           5,165,654        15,190.2      853,904          0.0
t2e2_3                     2            128           5,357,349        70,466.4      853,904          0.0
t2e2_3                     3            128           5,473,397       476,034.2      853,904          0.0
t2e2_3                     4            128           5,562,061       912,091.1      853,904          0.0
t2e2_3                     5            128           5,545,450       335,367.0      853,904          0.0
t2e2_3                     6            128           5,566,952        84,768.6      853,904          0.0
t2e2_3                     7            128           5,535,457     1,091,292.1      853,904          0.0
t2e2_3                     8            128           5,478,358        90,757.6      853,904          0.0

Experiment 2.4: Demonstrates that the experiments work as intended â€“ more comparisons
                translate to longer running time.
                Also, best case and worst case use the same number of comparisons each time (sdev = 0)
                Note two interesting things:
                1) Worst case input produces a higher number of comparisons but a running time
                comparable to the sorted input.
                2) Inverted arrays produce a lower number of comparisons.

# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
t2e2_4                     1            128           4,932,365        42,891.8      853,904          0.0
t2e2_4                     2            128           5,200,365        25,185.6      815,024          0.0
t2e2_4                     3            128           5,910,194        33,218.6    1,292,736      5,497.8
t2e2_4                     4            128           7,528,281     3,142,808.0    1,450,359      1,735.5
t2e2_4                     5             64          10,451,839       202,341.8    1,526,892        469.5
t2e2_4                     6             64          12,495,156       262,136.9    1,535,413        212.0
t2e2_4                     7             64          13,784,525       325,451.9    1,536,396        232.1
t2e2_4                     8            128           6,927,211        70,754.0    1,553,395          0.0

The following experiments investigate (1) further

Experiment 2.5: Demonstrate the the speedup does not come from the fact that it is the same
                input array each repetitions.

# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
t2e2_5                     1            128           5,074,472       101,570.3      853,904          0.0
t2e2_5                     2            128           5,217,356        40,612.8      815,024          0.0
t2e2_5                     3            128           5,826,455       124,510.8    1,292,913      5,944.2
t2e2_5                     4            128           6,969,593       100,840.9    1,450,352      1,709.1
t2e2_5                     5             64          10,555,830       195,834.5    1,526,899        495.9
t2e2_5                     6             64          12,880,875       372,200.2    1,535,407        219.0
t2e2_5                     7             64          13,627,516       291,941.0    1,536,390        224.6
t2e2_5                     8            128           6,935,971       105,192.4    1,553,395          0.0

Experiment 2.6: Demonstrate that the speedup does not come from multiple repetitions.

# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
t2e2_6                                    1          13,557,375             NaN    1,536,427          NaN

------------------------------------------------
The following experiments will investigate how sorting reacts to string input

Experiment 3.1: Random string input of size 100000
                The parameter is the length of the string.

# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
t2e3_1                     1             32          16,678,283     1,757,715.5    1,529,593        221.1
t2e3_1                     2             32          23,792,750     4,569,546.0    1,536,322        172.1
t2e3_1                     3             32          24,833,107       415,082.7    1,536,385        199.5
t2e3_1                     4             32          22,950,169       432,057.8    1,536,398        203.1
t2e3_1                     5             32          21,936,831     1,043,045.0    1,536,292        189.9
t2e3_1                     6             32          24,280,079       507,066.4    1,536,354        153.1
t2e3_1                     7             32          23,213,645     1,350,462.2    1,536,360        138.1
t2e3_1                     8             32          20,064,704       346,523.4    1,536,411        146.4
t2e3_1                     9             32          23,276,685       379,185.2    1,536,422        229.9
t2e3_1                    10             32          21,899,129       480,999.9    1,536,373        201.5
t2e3_1                    11             32          19,060,282       166,553.3    1,536,314        204.5
t2e3_1                    12             32          23,727,659     2,893,497.8    1,536,404        183.0
t2e3_1                    13             32          23,477,682     2,834,448.7    1,536,333        188.7
t2e3_1                    14             32          18,701,906       421,003.8    1,536,413        225.5
t2e3_1                    15             32          23,732,400     2,776,665.3    1,536,319        148.8
t2e3_1                    16             32          22,172,965       497,121.7    1,536,408        172.5
t2e3_1                    17             32          18,365,798       168,094.4    1,536,347        194.0
t2e3_1                    18             32          22,784,393     1,869,931.3    1,536,311        179.9
t2e3_1                    19             32          22,413,163       857,462.0    1,536,427        130.3
t2e3_1                    20             32          19,395,069       378,760.5    1,536,369        224.3

Interestingly, while it is slower to sort longer strings, it does not require more comparisons.


Experiment 3.2: Random string input of size 100000 with a common prefix of 'prefixprefix'
                The parameter is the length of the string following the prefix.

t2e3_2                     1             32          20,244,810       729,200.4    1,530,148        177.6
t2e3_2                     2             32          24,869,031       649,684.4    1,536,348        181.5
t2e3_2                     3             32          22,173,941       690,929.4    1,536,335        203.8
t2e3_2                     4             32          26,774,255       548,216.9    1,536,372        163.5
t2e3_2                     5             32          24,465,423     1,949,243.2    1,536,314        198.5
t2e3_2                     6             32          24,379,013       693,604.9    1,536,410        204.4
t2e3_2                     7             32          23,618,076       434,238.0    1,536,407        178.7
t2e3_2                     8             32          21,164,698     2,045,685.0    1,536,409        212.8
t2e3_2                     9             32          26,495,301       429,785.1    1,536,359        188.8
t2e3_2                    10             32          25,126,910       672,740.8    1,536,279        209.4
t2e3_2                    11             32          20,140,172       417,892.9    1,536,372        165.6
t2e3_2                    12             32          26,701,124     1,206,006.9    1,536,431        226.4
t2e3_2                    13             32          22,448,695     2,138,022.6    1,536,335        224.6
t2e3_2                    14             32          19,903,370       311,338.1    1,536,373        200.7
t2e3_2                    15             32          21,993,507     1,150,157.3    1,536,365        196.1
t2e3_2                    16             32          23,150,161       482,890.9    1,536,396        171.7
t2e3_2                    17             32          23,990,711       841,585.4    1,536,328        190.9
t2e3_2                    18             32          26,425,880       694,769.6    1,536,405        196.4
t2e3_2                    19             32          22,064,431     2,742,548.6    1,536,368        191.6
t2e3_2                    20             32          26,702,318     1,022,436.2    1,536,360        190.9

------------------------------------------------
The following experiments will investigate how different types of data and contents affect running time.
Experiment 4.1: This will run with completely random values

# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
t2e4_1-integers                           4         234,356,500    12,005,543.2   18,674,136        453.1
t2e4_1-strings                            2         625,920,230     1,724,485.7   18,674,403         44.5
t2e4_1-doubles                            2         503,006,708    17,184,639.3   18,673,971        801.2
t2e4_1-testdata                           2         495,632,292    11,842,447.6   18,673,828        490.0

Experiment 4.2: This will run with completely identical values

# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
t2e4_2-integers                           2         348,916,729    15,941,515.9   10,066,432          0.0
t2e4_2-strings                            2         319,460,979    12,366,620.2   10,066,432          0.0
t2e4_2-doubles                            2         371,519,958    22,528,481.4   10,066,432          0.0
t2e4_2-testdata                           2         386,699,917    40,609,201.1   10,066,432          0.0

=====================================================================
Task 3: Implement MergeSort with a base case of insertion sort.
=====================================================================

A recursive top-down mergesort with a base case of insertion sort sorted an integer array of size 100000, using 1537127 comparisons

=====================================================================
Task 4: Design and perform an experiment to find a good value of the parameter c.
=====================================================================

Size of array: 100
# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
control                              65,536               4,714         1,540.0          542          5.8
t4e1_1                     1         65,536               4,727           434.3          542          5.8
t4e1_1                     2         65,536               4,406           240.2          542          5.8
t4e1_1                     3         65,536               4,071           166.1          542          5.8
t4e1_1                     4         65,536               4,006           277.0          543          6.0
t4e1_1                     5         65,536               4,055           209.5          543          6.0
t4e1_1                     6         65,536               3,802         1,700.7          557          8.9
t4e1_1                     7         65,536               3,693           249.7          565         10.2
t4e1_1                     9         65,536               3,688           182.6          565         10.1
t4e1_1                    11         65,536               3,684           172.6          565         10.1
t4e1_1                    14         65,536               3,706           172.9          649         20.8
t4e1_1                    18         65,536               3,705           261.6          649         20.7
t4e1_1                    23         65,536               3,721         3,041.0          650         20.8
t4e1_1                    29         65,536               3,500           175.6          879         42.0
t4e1_1                    37         65,536               3,501           188.0          879         42.2
t4e1_1                    48         65,536               3,521         2,090.8          879         41.9
t4e1_1                    62         65,536               5,066         2,337.7        1,415         84.3
t4e1_1                    80         65,536               5,068           442.1        1,415         84.2
t4e1_1                   104         32,768               6,344         3,969.2        2,570        167.9
t4e1_1                   135         32,768               6,317           441.4        2,570        167.7
t4e1_1                   175         32,768               6,377           586.8        2,571        166.5

Size of array: 1,000
# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
control                               4,096              69,009         1,323.5        8,707         17.8
t4e1_2                     1          4,096              72,919        21,852.2        8,707         17.7
t4e1_2                     2          4,096              64,263         1,232.2        8,707         17.7
t4e1_2                     3          4,096              64,618         2,502.6        8,707         17.6
t4e1_2                     4          4,096              64,372        39,950.5        8,765         21.5
t4e1_2                     5          4,096              60,855         1,199.5        8,765         21.7
t4e1_2                     6          4,096              61,489         4,911.4        8,765         21.7
t4e1_2                     7          4,096              60,774         1,609.7        8,811         24.5
t4e1_2                     9          4,096              58,214         1,206.8        9,128         40.5
t4e1_2                    11          4,096              71,438       504,268.0        9,128         40.7
t4e1_2                    14          4,096              58,298         1,780.3        9,128         41.5
t4e1_2                    18          4,096              56,916         6,553.6       10,324         81.5
t4e1_2                    23          4,096              56,371         1,145.6       10,325         83.4
t4e1_2                    29          4,096              57,010         3,335.0       10,326         82.5
t4e1_2                    37          4,096              59,152         1,175.2       13,373        166.2
t4e1_2                    48          4,096              59,471         2,502.3       13,372        168.0
t4e1_2                    62          4,096              64,160         5,305.0       16,763        259.0
t4e1_2                    80          4,096              70,394         5,728.0       20,275        340.9
t4e1_2                   104          4,096              69,147         1,304.0       20,263        327.6
t4e1_2                   135          2,048             100,301         2,610.8       34,941        654.1
t4e1_2                   175          2,048              99,967         1,960.0       34,944        661.4

Size of array: 10,000
# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
control                                 256             930,381         8,689.2      120,444         64.4
t4e1_3                     1            256             931,257         5,279.2      120,450         61.3
t4e1_3                     2            256             895,898         5,235.1      120,453         57.2
t4e1_3                     3            256             870,295         5,057.6      120,452         55.4
t4e1_3                     4            256             866,853         6,557.8      120,514         63.5
t4e1_3                     5            256             844,597        12,767.4      121,517         81.1
t4e1_3                     6            256             842,025         6,058.8      121,509         75.8
t4e1_3                     7            256             839,095        19,729.0      121,510         80.5
t4e1_3                     9            256             833,720         5,100.2      122,509        106.1
t4e1_3                    11            256             816,663         5,870.1      127,067        155.0
t4e1_3                    14            256             815,499         4,194.2      127,071        166.1
t4e1_3                    18            256             809,998         4,409.8      127,054        163.2
t4e1_3                    23            256             806,976         7,508.0      143,557        329.5
t4e1_3                    29            256             807,774         5,425.8      143,558        302.8
t4e1_3                    37            256             806,436         8,016.7      143,574        311.4
t4e1_3                    48            256             844,478         5,552.7      183,598        703.7
t4e1_3                    62            256             844,746         5,752.0      183,589        641.5
t4e1_3                    80            256           1,010,074         6,047.3      271,760      1,314.2
t4e1_3                   104            256           1,012,394        12,748.9      271,936      1,255.5
t4e1_3                   135            256           1,006,209         6,965.3      271,945      1,342.8
t4e1_3                   175            256           1,367,813         9,426.3      457,622      2,969.3

Size of array: 100,000
# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
control                                  32          12,536,897     2,317,874.0    1,536,392        183.6
t4e1_4                     1             32          11,959,651        18,240.9    1,536,454        222.1
t4e1_4                     2             16          12,521,138     3,457,109.6    1,536,436        181.0
t4e1_4                     3             32          11,186,326        55,522.0    1,536,277        154.0
t4e1_4                     4             32          11,878,000        34,276.0    1,536,788        209.4
t4e1_4                     5             32          11,183,651        24,317.0    1,536,800        225.0
t4e1_4                     6             32          10,904,970        19,466.2    1,554,575        315.3
t4e1_4                     7             32          11,179,914       154,802.8    1,557,903        312.1
t4e1_4                     9             32          11,086,858       330,545.6    1,557,951        284.1
t4e1_4                    11             32          10,864,357        20,698.2    1,557,984        341.9
t4e1_4                    14             32          11,049,109        91,538.8    1,639,190        678.9
t4e1_4                    18             32          10,747,779       190,248.9    1,639,644        609.7
t4e1_4                    23             32          10,718,081       124,844.0    1,639,521        611.9
t4e1_4                    29             32          11,166,338       195,945.6    1,861,992      1,063.3
t4e1_4                    37             32          10,711,837        79,597.0    1,862,150      1,227.5
t4e1_4                    48             32          10,863,421        33,258.3    1,948,887      1,483.2
t4e1_4                    62             32          11,476,315        28,817.7    2,382,777      2,620.6
t4e1_4                    80             32          14,360,182     4,731,843.9    2,382,245      2,810.1
t4e1_4                   104             16          13,373,758        30,719.2    3,508,278      6,563.2
t4e1_4                   135             16          13,459,404       239,008.1    3,507,086      3,393.5
t4e1_4                   175             16          14,011,940       249,784.9    3,508,229      4,061.8

Size of array: 1,000,000
# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
control                                   2         330,082,646     7,803,070.4   18,674,590        235.5
t4e1_5                     1              2         352,791,729    12,377,993.3   18,674,159        740.3
t4e1_5                     2              2         334,040,875    11,154,492.1   18,673,963        506.3
t4e1_5                     3              2         326,548,958    13,716,340.0   18,674,522        306.2
t4e1_5                     4              2         339,013,146    14,104,334.4   18,727,137        598.9
t4e1_5                     5              2         317,705,333     3,386,628.5   18,726,765        708.5
t4e1_5                     6              2         329,834,021     2,895,985.5   18,726,824        874.7
t4e1_5                     7              2         323,582,333     7,060,401.8   18,821,193        666.1
t4e1_5                     9              2         322,055,271     4,712,071.2   19,071,872        565.0
t4e1_5                    11              2         345,313,875     3,828,452.9   19,071,684        922.1
t4e1_5                    14              2         341,890,646    11,326,760.3   19,072,054        516.9
t4e1_5                    18              2         333,887,500     7,809,051.8   20,226,458      1,539.4
t4e1_5                    23              2         335,524,125     5,275,252.8   20,224,568      3,080.9
t4e1_5                    29              2         330,704,542     9,977,336.1   20,225,955        273.7
t4e1_5                    37              2         324,577,021    10,009,715.2   23,189,434     14,190.2
t4e1_5                    48              2         344,419,021    13,572,531.4   23,184,583      3,806.4
t4e1_5                    62              2         366,914,750     1,843,957.7   29,913,152      5,787.0
t4e1_5                    80              2         361,126,751    13,931,830.0   29,913,343      2,807.9
t4e1_5                   104              2         351,814,208    20,296,675.7   29,900,412     17,201.1
t4e1_5                   135              2         391,408,563    15,902,212.8   44,223,345      9,343.7
t4e1_5                   175              2         379,714,063     3,401,979.1   44,206,501     33,567.1

Size of array: 2,000,000
# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
control                                   2         856,522,438     6,449,904.9   39,348,097        965.2
t4e1_6                     1              2         838,439,292    19,439,720.2   39,347,977         64.3
t4e1_6                     2              2         853,373,646    12,582,052.3   39,347,815         26.9
t4e1_6                     3              2         833,395,271    20,116,569.2   39,348,329        221.3
t4e1_6                     4              2         806,412,437     3,451,535.3   39,455,371      1,125.0
t4e1_6                     5              2         811,958,709     1,995,867.6   39,454,114        272.2
t4e1_6                     6              2         842,866,917    12,118,337.3   39,456,081      1,668.1
t4e1_6                     7              2         838,983,312    29,786,666.7   39,641,374      2,189.2
t4e1_6                     9              2         817,313,834    18,372,814.2   40,146,685      1,116.5
t4e1_6                    11              2         835,908,854       536,251.4   40,144,017      3,220.2
t4e1_6                    14              2         799,485,834    12,561,929.5   40,144,173      2,404.9
t4e1_6                    18              2         879,293,604    48,153,235.0   42,444,062      2,481.2
t4e1_6                    23              2         836,901,688    11,494,403.3   42,446,077      3,273.2
t4e1_6                    29              2         834,698,500     8,570,487.7   42,449,771      4,195.3
t4e1_6                    37              2         848,057,001     6,787,105.7   48,380,216      4,768.7
t4e1_6                    48              2         835,273,646     3,804,617.7   48,369,237      7,405.5
t4e1_6                    62              2         911,937,958    17,371,198.1   61,819,207      3,737.1
t4e1_6                    80              2         877,943,688    18,431,710.5   61,791,211        871.2
t4e1_6                   104              2         892,046,959    16,547,300.7   61,791,577     19,249.6
t4e1_6                   135              2         972,875,688    26,078,186.5   90,428,609     19,541.6
t4e1_6                   175              2         984,516,355     1,520,250.6   90,380,150     11,104.4


It seems the optimal zone is around the 20s

Meassuring at finer scale for n=100_000
Size of array: 100000
# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
t4e2_1                     1    3        64          11,960,356        46,589.8    1,536,348         14.5
t4e2_1                     2    3        64          11,844,392        41,360.5    1,536,361          0.6
t4e2_1                     3    3        64          11,852,324       191,526.6    1,536,377         17.2
t4e2_1                     4    3        64          11,627,431        90,075.3    1,536,774         16.5
t4e2_1                     5    3        64          11,765,653        19,710.5    1,536,792          8.0
t4e2_1                     6    3        64          11,142,426       128,978.8    1,554,642         52.6
t4e2_1                     7    3        64          11,319,712        24,326.4    1,557,945         50.8
t4e2_1                     8    3        64          11,133,877       118,905.5    1,557,947         68.2
t4e2_1                     9    3        64          11,199,117       114,465.3    1,557,879         60.9
t4e2_1                    10    3        64          11,191,825       111,885.5    1,557,908         41.6
t4e2_1                    11    3        64          11,029,275        57,130.8    1,557,935         19.2
t4e2_1                    12    3        64          11,090,642        66,859.5    1,619,681         98.6
t4e2_1                    13    3        64          10,825,782        15,083.7    1,639,429         78.7
t4e2_1                    14    3        64          11,142,642       156,451.8    1,639,362         92.0
t4e2_1                    15    3        64          10,786,187         7,161.4    1,639,453         75.6
t4e2_1                    16    3        64          11,024,706        53,661.8    1,639,468         48.1
t4e2_1                    17    3        64          10,818,917        83,402.5    1,639,309         81.1
t4e2_1                    18    3        64          10,815,598        49,466.1    1,639,384         94.7
t4e2_1                    19    3        64          11,000,980       111,094.7    1,639,389         85.7
t4e2_1                    20    3        64          10,869,949        59,610.2    1,639,421         33.1
t4e2_1                    21    3        64          11,034,361       276,671.8    1,639,382         63.0
t4e2_1                    22    3        64          10,875,903        28,799.1    1,639,393         75.5
t4e2_1                    23    3        64          11,199,090       487,785.9    1,639,392         25.4
t4e2_1                    24    3        64          10,742,709        27,640.6    1,764,977         24.7
t4e2_1                    25    3        64          11,079,710        93,004.4    1,862,261         60.2
t4e2_1                    26    3        64          11,175,018        63,654.5    1,862,040         52.8
t4e2_1                    27    3        64          11,206,862        90,400.3    1,862,213         57.1
t4e2_1                    28    3        64          11,157,574        71,839.2    1,862,088         21.4
t4e2_1                    29    3        64          11,036,540       106,840.9    1,862,210        144.3
t4e2_1                    30    3        64          10,862,652        68,137.7    1,862,084        214.6
t4e2_1                    31    3        64          11,314,652        85,441.2    1,861,886         38.1
t4e2_1                    32    3        64          11,101,915       328,922.6    1,862,084         68.4
t4e2_1                    33    3        64          10,880,606       124,455.7    1,861,978        199.7
t4e2_1                    34    3        64          10,817,526        85,135.1    1,862,037        177.4
t4e2_1                    35    3        64          10,869,076        89,544.3    1,861,910        148.2
t4e2_1                    36    3        64          10,752,931        20,613.4    1,862,137         93.8
t4e2_1                    37    3        64          10,970,403       160,556.0    1,862,032         41.6
t4e2_1                    38    3        64          11,044,775        67,110.9    1,862,046        144.1
t4e2_1                    39    3        64          11,298,629        41,845.7    1,861,990        177.0
t4e2_1                    40    3        64          11,253,721       100,849.9    1,862,111        155.1


Best value seems to lie around 25
=====================================================================
Task 5: Implement MergeSort iteratively using a stack of runs.
=====================================================================

An iterative top-down mergesort sorted an integer array of size 100000, using 1566592 comparisons

=====================================================================
Task 6: In the algorithm of Task 5, create new runs of length c.
=====================================================================

An iterative top-down mergesort with base case of runs of size 5 sorted an integer array of size 100000, using 1581802 comparisons

=====================================================================
Rerun your experiment of Task 4 for your iterative MergeSort
Compare your results for the recursive and iterative implementations.
=====================================================================


Measuring large interval with multiple array sizes:
Size of array: 1000
# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
control                               8,192              67,725         1,532.0        8,720         17.7
t7e1_2                     1          8,192              69,281         6,001.5        8,719         17.9
t7e1_2                     2          8,192              65,497         1,304.4        8,719         17.6
t7e1_2                     3          8,192              66,343        32,496.5        9,016         20.1
t7e1_2                     4          8,192              61,916         1,538.4        8,782         21.9
t7e1_2                     5         16,384              60,073         3,466.3        9,065         27.3
t7e1_2                     6         16,384              60,783         4,042.6        9,218         31.5
t7e1_2                     7          8,192              61,238         1,912.5        9,542         36.9
t7e1_2                     9         16,384              59,788           955.0        9,336         47.2
t7e1_2                    11         16,384              59,175         3,154.3        9,713         56.8
t7e1_2                    14         16,384              59,931           985.2       10,551         74.2
t7e1_2                    18         16,384              59,001         3,458.3       10,791         94.8
t7e1_2                    23         16,384              59,447         1,569.9       11,873        121.1
t7e1_2                    29          8,192              63,156         1,405.5       13,500        153.3
t7e1_2                    37          8,192              63,054         1,750.1       14,695        196.5
t7e1_2                    48          8,192              69,238         1,852.1       17,214        256.5
t7e1_2                    62          8,192              77,342         2,147.3       20,892        345.2
t7e1_2                    80          8,192              84,168         3,098.4       24,175        419.9
t7e1_2                   104          8,192              95,134         5,568.1       29,700        541.1
t7e1_2                   135          8,192             111,356        61,295.0       36,350        703.9
t7e1_2                   175          4,096             133,791         5,999.0       45,613        884.9

Size of array: 10000
# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
control                               1,024             924,731        16,960.0      123,659         59.2
t7e1_3                     1          1,024             934,634         5,488.5      123,660         58.7
t7e1_3                     2          1,024             909,023        17,324.9      123,659         57.9
t7e1_3                     3          1,024             888,773         7,744.3      122,467         75.2
t7e1_3                     4          1,024             870,923        12,426.2      124,284         69.7
t7e1_3                     5          1,024             861,133         9,426.6      121,726         78.9
t7e1_3                     6          1,024             866,874        11,475.4      124,491        104.8
t7e1_3                     7          1,024             852,817        11,613.0      125,510        117.8
t7e1_3                     9          1,024             854,031        17,284.2      132,135        145.1
t7e1_3                    11          1,024             840,323         8,783.4      130,076        178.5
t7e1_3                    14          1,024             842,967        12,628.5      135,637        229.7
t7e1_3                    18          1,024             847,913         8,901.1      146,830        297.9
t7e1_3                    23          1,024             849,877        18,898.1      151,200        387.2
t7e1_3                    29          1,024             867,205       206,528.9      164,565        498.5
t7e1_3                    37          1,024             960,709       555,512.0      186,159        642.0
t7e1_3                    48          1,024             926,413        16,466.7      205,150        830.0
t7e1_3                    62            512             988,764        18,544.0      238,904      1,017.3
t7e1_3                    80            512           1,078,435        11,010.7      276,491      1,303.0
t7e1_3                   104            512           1,239,942       429,726.5      336,277      1,868.0
t7e1_3                   135            512           1,357,561        34,694.6      411,096      2,229.2
t7e1_3                   175            512           1,625,022        27,066.6      503,414      2,803.4

Size of array: 100000
# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
control                                  64          11,922,716        75,611.3    1,566,517        187.9
t7e1_4                     1             64          12,011,801       146,441.8    1,566,538        170.6
t7e1_4                     2             64          12,138,615       127,662.4    1,566,519        215.8
t7e1_4                     3             64          11,877,750        36,541.4    1,624,772        226.1
t7e1_4                     4             64          11,633,963        67,032.5    1,572,765        232.3
t7e1_4                     5             64          11,512,893        27,801.8    1,581,998        260.9
t7e1_4                     6             64          11,991,274        30,261.3    1,645,079        302.4
t7e1_4                     7             64          11,407,170        37,794.0    1,572,615        367.4
t7e1_4                     9             64          11,094,012        56,221.5    1,612,630        506.2
t7e1_4                    11             64          11,094,349        76,636.5    1,675,568        515.1
t7e1_4                    14             64          11,060,738       849,487.5    1,673,933        920.3
t7e1_4                    18             64          10,751,507       106,929.3    1,759,716        841.7
t7e1_4                    23             64          11,029,474       102,295.4    1,901,799      1,085.7
t7e1_4                    29             64          11,268,566     1,433,203.0    1,964,978      1,707.0
t7e1_4                    37             64          11,585,208        85,659.0    2,152,138      1,984.8
t7e1_4                    48             64          12,917,208     3,107,228.8    2,452,247      2,203.4
t7e1_4                    62             64          12,233,932       104,990.4    2,703,164      3,192.1
t7e1_4                    80             64          13,594,188     1,696,735.5    3,129,400      3,523.3
t7e1_4                   104             64          14,407,158       296,884.4    3,666,105      5,138.6
t7e1_4                   135             32          15,660,116        46,417.0    4,414,225      7,710.3
t7e1_4                   175             32          18,210,925       458,267.5    5,410,186      8,888.6


Plot can be found in 't7p1.pdf'
It seems in general across input-sizes that the optimal zone is around 7-15

Checking just for input size 100_000 for each c-value from 1-50
Size of array: 100000
# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
t7e2_1                     1    3        64          11,896,912        24,281.4    1,566,523         26.3
t7e2_1                     2    3        64          12,044,829        19,535.4    1,566,534          4.2
t7e2_1                     3    3        64          12,121,305        47,023.5    1,624,738         28.4
t7e2_1                     4    3        64          11,765,047        63,435.7    1,572,766         60.3
t7e2_1                     5    3        64          11,730,860       180,050.1    1,582,057         22.9
t7e2_1                     6    3        64          11,821,894         2,508.1    1,645,041         48.8
t7e2_1                     7    3        64          11,692,112       152,265.3    1,572,608         24.1
t7e2_1                     8    3        64          11,566,794       150,663.4    1,610,906         27.2
t7e2_1                     9    3        64          11,543,501        53,901.3    1,612,636         12.6
t7e2_1                    10    3        64          11,409,465        53,595.5    1,640,120         64.1
t7e2_1                    11    3        64          11,515,211       122,501.5    1,675,537         85.5
t7e2_1                    12    3        64          11,298,875        44,244.0    1,724,269        182.5
t7e2_1                    13    3        64          11,089,023       116,146.2    1,659,981          1.0
t7e2_1                    14    3        64          10,986,435        94,632.7    1,673,890        121.9
t7e2_1                    15    3        64          11,037,423        44,115.3    1,706,287         72.9
t7e2_1                    16    3        64          11,036,650        49,071.1    1,734,745         73.7
t7e2_1                    17    3        64          10,896,728       110,447.8    1,733,731         83.7
t7e2_1                    18    3        64          10,923,525        52,502.0    1,759,612        107.0
t7e2_1                    19    3        64          10,984,003        69,322.8    1,792,736        164.6
t7e2_1                    20    3        64          11,023,786        76,947.0    1,810,579         31.5
t7e2_1                    21    3        64          11,085,914        92,856.8    1,840,994        129.3
t7e2_1                    22    3        64          11,057,815        49,376.6    1,869,535         94.0
t7e2_1                    23    3        64          11,139,203        45,722.3    1,902,002         98.6
t7e2_1                    24    3        64          11,284,174        44,243.7    1,942,081        286.9
t7e2_1                    25    3        64          11,026,508        55,215.0    1,875,363         70.2
t7e2_1                    26    3        64          11,146,771        51,701.3    1,901,784        200.0
t7e2_1                    27    3        64          11,145,013       125,445.9    1,921,470         51.1
t7e2_1                    28    3        64          11,166,163       121,366.9    1,939,805        182.2
t7e2_1                    29    3        64          11,147,880       125,650.7    1,964,961        221.9
t7e2_1                    30    3        64          11,419,965       478,267.0    1,996,430        276.8
t7e2_1                    31    3        64          11,190,402        31,900.0    2,019,337        432.8
t7e2_1                    32    3        64          11,323,409        88,056.4    2,049,220        252.0
t7e2_1                    33    3        64          11,244,432       157,448.7    2,048,498        365.0
t7e2_1                    34    3        64          11,245,388        53,065.2    2,072,444        129.0
t7e2_1                    35    3        64          11,303,866        92,637.1    2,100,683         94.1
t7e2_1                    36    3        64          11,379,556       193,726.8    2,122,830        316.9
t7e2_1                    37    3        64          11,437,871        81,666.2    2,152,268        175.8
t7e2_1                    38    3        64          11,347,990        51,015.0    2,180,117        174.6
t7e2_1                    39    3        64          11,588,038       153,802.4    2,212,849        169.3
t7e2_1                    40    3        64          11,578,270        32,827.6    2,222,299        168.7
t7e2_1                    41    3        64          11,595,506        76,496.7    2,251,212        588.6
t7e2_1                    42    3        64          11,598,834        97,723.8    2,277,348        306.9
t7e2_1                    43    3        64          11,708,321       117,805.8    2,308,158        136.2
t7e2_1                    44    3        64          11,755,138        77,700.4    2,330,878        304.6
t7e2_1                    45    3        64          11,817,713        90,525.2    2,359,728        205.4
t7e2_1                    46    3        64          11,948,897        14,434.7    2,387,823         72.3
t7e2_1                    47    3        64          12,007,030        74,395.0    2,419,696        292.4
t7e2_1                    48    3        64          12,022,288        50,519.6    2,452,505        371.9
t7e2_1                    49    3        64          11,970,060       143,181.5    2,386,466        251.7
t7e2_1                    50    3        64          11,978,051        67,064.8    2,410,395        448.4


Plot can be found in 't7p2.pdf'
While some deviations persist, around 10 seems to be a good value
=====================================================================
Task 8: Implement adpative and non-adaptive variants of Level Sort and Binomial Sort.
=====================================================================

Non-adaptive Level-sort sorted a random integer array of size 100000, using 1584986 comparisons

Adaptive Level-sort sorted a random integer array of size 100000, using 1627612 comparisons

Non-adaptive Binomial-sort sorted a random integer array of size 100000, using 1582225 comparisons

Adaptive Binomial-sort sorted a random integer array of size 100000, using 1640920 comparisons

=====================================================================
Task 9: Design and perform an experiment that investigates the
        influence of the value of c and the presortedness of the
        input on the running time and the number of comparissons.
=====================================================================

Running all sorting algorithms on random input of size: 100000
# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
t9random1                  1             16          13,203,409       273,728.6    1,566,562        129.9
t9random1                  2             32          12,595,490       259,976.5    1,566,510        171.6
t9random1                  3             32          12,268,125       105,264.0    1,573,395        195.2
t9random1                  4             32          11,849,520        32,965.2    1,572,739        221.1
t9random1                  5             32          12,139,728        29,717.3    1,584,854        279.7
t9random1                  6             32          11,873,078       126,720.6    1,595,022        280.0
t9random1                  7             32          11,756,092       110,782.2    1,603,803        365.1
t9random1                  8             32          11,811,428        82,264.1    1,610,850        393.4
t9random1                  9             32          11,638,956        91,623.1    1,627,732        459.7
t9random1                 10             32          11,723,094        59,591.7    1,643,628        525.8
t9random1                 11             32          11,623,479       128,272.1    1,659,490        504.5
t9random1                 12             32          11,748,783       103,907.2    1,675,282        751.5
t9random1                 13             32          11,389,132        44,042.2    1,690,799        715.2
t9random1                 14             32          11,541,402       137,681.9    1,705,486        866.9
t9random1                 15             32          11,560,357        43,447.1    1,720,375        838.5
t9random1                 16             32          11,451,505        90,208.5    1,734,994        815.0
t9random1                 17             32          11,455,214       181,753.2    1,754,978        961.3
t9random1                 18             32          11,555,311       106,519.1    1,774,917        886.4
t9random1                 19             32          11,563,337        99,679.0    1,795,058        963.0
t9random1                 20             32          11,529,617        25,908.7    1,814,733      1,229.4
t9random1                 21             32          11,521,776        54,603.9    1,834,134      1,047.5
t9random1                 22             32          11,593,286        29,958.8    1,854,094      1,359.0
t9random1                 23             32          11,585,224        30,616.1    1,874,147      1,067.4
t9random1                 24             32          11,542,108        33,294.1    1,893,505      1,429.0
t9random1                 25             32          11,554,214        33,046.5    1,913,133      1,340.6
t9random1                 26             32          11,665,645       146,179.4    1,933,078      1,702.1
t9random1                 27             32          11,467,902       128,233.2    1,952,198      1,655.0
t9random1                 28             32          11,625,423       134,785.4    1,971,521      1,434.7
t9random1                 29             32          11,544,255        82,743.0    1,991,366      1,435.2
t9random1                 30             32          11,467,983        36,829.1    2,009,931      1,976.9
t9random2                  1             16          12,612,096        23,802.2    1,601,365        269.1
t9random2                  2             16          12,755,807       173,147.5    1,629,451        317.6
t9random2                  3             32          12,394,514        30,797.3    1,634,699        296.9
t9random2                  4             32          12,224,236       233,211.5    1,624,937        222.6
t9random2                  5             32          12,204,729       251,454.6    1,627,537        282.8
t9random2                  6             32          12,267,052       251,424.1    1,630,861        242.4
t9random2                  7             32          12,144,499       130,680.9    1,634,515        288.8
t9random2                  8             32          12,354,302       183,491.9    1,637,850        352.9
t9random2                  9             32          12,317,266       243,366.8    1,651,651        484.1
t9random2                 10             32          12,278,767       122,083.2    1,665,272        593.1
t9random2                 11             32          12,156,713       222,945.1    1,679,201        752.3
t9random2                 12             32          12,278,792       131,394.7    1,693,058        548.5
t9random2                 13             32          12,255,742       163,198.8    1,706,949        603.4
t9random2                 14             32          12,162,965       104,700.7    1,721,032        680.0
t9random2                 15             32          12,172,776        58,045.1    1,734,739        961.9
t9random2                 16             32          12,363,203        90,419.6    1,748,282        855.7
t9random2                 17             32          12,442,035       192,053.1    1,767,780        862.4
t9random2                 18             32          12,531,038        82,354.0    1,787,007        617.9
t9random2                 19             16          12,672,604        59,835.6    1,806,949        843.4
t9random2                 20             16          12,681,419       178,952.3    1,825,637        966.4
t9random2                 21             16          12,588,584       192,121.6    1,844,228      1,038.4
t9random2                 22             16          12,657,526        29,804.0    1,864,337        844.2
t9random2                 23             16          12,709,893       189,401.4    1,883,430      1,258.7
t9random2                 24             16          12,791,190       125,730.0    1,903,342      1,461.2
t9random2                 25             16          12,919,878       165,872.0    1,921,990      1,229.1
t9random2                 26             16          12,921,015       250,570.5    1,940,809      1,263.4
t9random2                 27             16          12,882,617       214,000.6    1,960,239      1,227.5
t9random2                 28             16          13,063,344       262,255.0    1,979,398      1,764.4
t9random2                 29             16          13,165,977       231,025.7    1,998,200      1,251.5
t9random2                 30             16          13,269,461       187,166.0    2,017,750      1,409.9
t9random3                  1             16          12,780,065       276,840.2    1,566,438        178.3
t9random3                  2             32          12,228,742        71,294.6    1,566,523        136.9
t9random3                  3             32          12,214,924        32,110.2    1,624,779        204.9
t9random3                  4             32          11,826,138        32,978.1    1,572,760        196.5
t9random3                  5             32          11,697,381        34,903.0    1,582,093        231.2
t9random3                  6             32          12,169,535        47,031.2    1,645,085        329.4
t9random3                  7             32          11,825,885        40,808.4    1,572,672        353.9
t9random3                  8             32          11,698,983       164,800.5    1,610,893        386.9
t9random3                  9             32          11,399,233        32,925.8    1,612,647        462.0
t9random3                 10             32          11,482,130        26,186.1    1,640,164        421.7
t9random3                 11             32          11,501,249        28,684.8    1,675,542        480.7
t9random3                 12             32          11,809,868        73,519.4    1,724,303        724.5
t9random3                 13             32          11,365,010        53,721.1    1,659,944        712.5
t9random3                 14             32          11,404,479        29,715.2    1,674,141        796.6
t9random3                 15             32          11,514,432       197,029.2    1,706,456        880.2
t9random3                 16             32          11,603,693       182,083.1    1,734,798      1,043.2
t9random3                 17             32          11,387,247        59,035.3    1,733,985        949.9
t9random3                 18             32          11,557,091        31,809.9    1,759,700        952.0
t9random3                 19             32          11,743,716       108,320.1    1,792,436        915.6
t9random3                 20             32          11,335,894        50,290.3    1,810,819      1,179.5
t9random3                 21             32          11,521,700        84,203.4    1,841,052      1,411.6
t9random3                 22             32          11,498,368        91,580.7    1,869,430      1,097.6
t9random3                 23             32          11,641,349        96,803.3    1,902,169      1,359.0
t9random3                 24             32          11,781,651        95,606.3    1,942,157        945.4
t9random3                 25             16          12,735,685     4,239,759.9    1,875,585      1,789.8
t9random3                 26             32          11,840,161        86,946.1    1,901,693      1,340.1
t9random3                 27             32          11,895,332        86,076.6    1,921,351      1,426.7
t9random3                 28             32          11,842,396       151,011.5    1,940,024      1,471.5
t9random3                 29             32          11,959,905        32,701.3    1,965,088      1,411.5
t9random3                 30             32          11,771,491        23,566.1    1,996,482      1,720.8
t9random4                  1             32          11,681,465       107,396.0    1,657,717     23,725.0
t9random4                  2             32          11,789,660       109,543.4    1,677,012     20,278.4
t9random4                  3             32          11,746,757       101,993.5    1,686,770     24,247.7
t9random4                  4             32          11,718,022       105,581.8    1,666,560     25,619.7
t9random4                  5             32          11,875,650       175,118.7    1,647,572     24,545.5
t9random4                  6             32          11,750,995       115,818.5    1,641,183     26,823.6
t9random4                  7             32          11,766,689        53,159.7    1,615,682     15,697.1
t9random4                  8             32          11,872,578        73,956.6    1,637,826      4,087.7
t9random4                  9             32          11,720,143        94,043.9    1,636,611        414.6
t9random4                 10             32          11,776,592        25,901.7    1,661,812        453.5
t9random4                 11             32          11,810,788        63,495.7    1,695,192        501.4
t9random4                 12             32          11,990,889        53,003.4    1,742,282        518.6
t9random4                 13             32          11,919,671        92,750.5    1,676,484        512.1
t9random4                 14             32          11,738,203       138,273.7    1,689,275        721.5
t9random4                 15             32          12,048,543        27,206.7    1,720,760        675.9
t9random4                 16             32          11,881,993        93,465.2    1,748,354        715.8
t9random4                 17             32          12,280,341       884,079.7    1,746,464        819.7
t9random4                 18             32          11,971,164       180,626.6    1,771,618        833.8
t9random4                 19             32          11,783,726        53,055.5    1,804,178      1,018.6
t9random4                 20             32          11,961,682        35,432.3    1,821,280        941.7
t9random4                 21             32          11,922,566        78,623.3    1,851,021        948.4
t9random4                 22             32          12,074,488        38,664.4    1,879,269        939.8
t9random4                 23             32          12,267,421       143,609.4    1,911,382      1,269.2
t9random4                 24             32          12,339,735        53,014.9    1,951,057      1,266.7
t9random4                 25             32          12,103,224        28,897.5    1,883,350      1,294.6
t9random4                 26             32          11,970,641        59,657.2    1,909,592      1,407.9
t9random4                 27             32          12,132,710        24,776.3    1,929,530      1,200.9
t9random4                 28             16          13,081,211     3,714,557.0    1,946,694      1,962.3
t9random4                 29             32          12,142,012       103,850.0    1,972,363      1,642.5
t9random4                 30             32          12,516,869       273,711.5    2,003,883      1,174.6

Compare-wise it seems that the adaptive versions perform more compares for smaller values of c (about up to 10).
afterwards they perform about the same, as could be expected
(since cost of exploring runs is lower compared to insertionsort since probability of finding
runs with that length is lower)
Time-wise, results follow about the same pattern, but results are more volatile
In general it seems that low values of c around 5-20 could give some improvements (depending on
the algorithm), but not noticeable much
This makes sense to us, as the length of runs in a random input usually isn't very high
There are certain spikes, especially for the Binomial-sort-variants, around c-values that roughly amounts to n
when multiplied by a factor of 2. This could pertain to the skewedness of the resulting binary merge-tree
Running all sorting algorithms on min-run, alternating input of size: 100000
# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
t9minrun1                  1             64           5,863,260       141,081.9    1,229,008          0.0
t9minrun1                  2             64           5,353,284        60,223.8    1,229,008          0.0
t9minrun1                  3             64           4,989,611       109,851.5    1,245,673          0.0
t9minrun1                  4             64           4,849,077       135,004.1    1,254,008          0.0
t9minrun1                  5             64           4,761,909        23,093.6    1,254,016          0.0
t9minrun1                  6             64           4,755,415         9,321.2    1,283,172          0.0
t9minrun1                  7             64           4,698,857        19,115.4    1,277,209          0.0
t9minrun1                  8             64           4,666,794        11,844.9    1,304,008          0.0
t9minrun1                  9             64           4,642,175        12,807.0    1,302,627          0.0
t9minrun1                 10             64           4,741,702       131,513.4    1,340,250          0.0
t9minrun1                 11             64           4,693,725        14,187.9    1,337,538          0.0
t9minrun1                 12             64           4,845,456       359,092.5    1,374,840          0.0
t9minrun1                 13             64           4,760,061        17,184.5    1,370,370          0.0
t9minrun1                 14             64           4,800,268        15,424.2    1,408,486          0.0
t9minrun1                 15             64           4,768,282        13,749.5    1,403,624          0.0
t9minrun1                 16             64           4,830,048       134,814.5    1,441,508          0.0
t9minrun1                 17             64           4,827,103        21,398.0    1,440,434          0.0
t9minrun1                 18             64           4,918,937       205,074.9    1,483,487          0.0
t9minrun1                 19             64           4,929,454        42,755.0    1,482,136          0.0
t9minrun1                 20             64           4,992,821        65,694.6    1,525,220          0.0
t9minrun1                 21             64           4,983,350        15,594.2    1,523,300          0.0
t9minrun1                 22             64           5,081,434        61,097.1    1,566,731          0.0
t9minrun1                 23             64           5,068,899        17,592.7    1,564,733          0.0
t9minrun1                 24             64           5,147,362        60,238.0    1,608,146          0.0
t9minrun1                 25             64           5,301,605       526,458.7    1,605,713          0.0
t9minrun1                 26             64           5,217,740        16,001.2    1,649,448          0.0
t9minrun1                 27             64           5,217,805        11,852.3    1,646,926          0.0
t9minrun1                 28             64           5,320,462        60,282.5    1,690,602          0.0
t9minrun1                 29             64           5,316,893        17,735.2    1,687,806          0.0
t9minrun1                 30             64           5,427,397        61,825.9    1,731,717          0.0
t9minrun2                  1             64           5,302,197        30,524.6    1,279,007          0.0
t9minrun2                  2             64           5,480,275        98,028.2    1,329,007          0.0
t9minrun2                  3             64           5,178,012        16,133.0    1,312,339          0.0
t9minrun2                  4             64           5,051,417        22,108.2    1,304,007          0.0
t9minrun2                  5             64           5,037,385        56,808.9    1,294,015          0.0
t9minrun2                  6             64           5,105,333        64,723.4    1,316,505          0.0
t9minrun2                  7             64           5,056,992        44,923.4    1,305,780          0.0
t9minrun2                  8             64           5,053,642        48,643.0    1,329,007          0.0
t9minrun2                  9             64           5,080,510        70,676.6    1,324,849          0.0
t9minrun2                 10             64           5,426,228     1,461,050.3    1,360,249          0.0
t9minrun2                 11             64           5,150,533        53,354.3    1,355,719          0.0
t9minrun2                 12             64           5,313,161        79,304.6    1,391,507          0.0
t9minrun2                 13             64           5,284,705        69,534.1    1,385,755          0.0
t9minrun2                 14             64           5,420,286        80,217.9    1,422,771          0.0
t9minrun2                 15             64           5,399,561        39,570.3    1,416,957          0.0
t9minrun2                 16             64           5,468,287        84,544.7    1,454,007          0.0
t9minrun2                 17             64           5,517,130        78,465.7    1,452,199          0.0
t9minrun2                 18             64           5,696,572        84,021.4    1,494,598          0.0
t9minrun2                 19             64           5,712,513        87,835.8    1,492,663          0.0
t9minrun2                 20             64           5,846,326       118,632.1    1,535,219          0.0
t9minrun2                 21             32           6,362,178     2,377,517.8    1,532,823          0.0
t9minrun2                 22             64           6,033,241        67,279.5    1,575,822          0.0
t9minrun2                 23             64           6,038,952        84,544.9    1,573,428          0.0
t9minrun2                 24             64           6,118,513       192,913.4    1,616,479          0.0
t9minrun2                 25             64           6,164,405        91,223.7    1,613,712          0.0
t9minrun2                 26             32           6,341,064       145,196.8    1,657,141          0.0
t9minrun2                 27             32           6,258,016       172,254.1    1,654,333          0.0
t9minrun2                 28             32           6,491,371       127,976.7    1,697,745          0.0
t9minrun2                 29             32           6,475,638        89,750.9    1,694,703          0.0
t9minrun2                 30             32           6,739,113        42,824.5    1,738,384          0.0
t9minrun3                  1             64           5,411,745        18,876.6    1,229,008          0.0
t9minrun3                  2             64           5,059,031        15,149.9    1,229,008          0.0
t9minrun3                  3             64           5,187,706     1,451,642.6    1,260,416          0.0
t9minrun3                  4             64           4,802,874        60,564.3    1,254,008          0.0
t9minrun3                  5             64           4,673,272        16,975.5    1,244,640          0.0
t9minrun3                  6             64           4,917,026        82,516.6    1,310,415          0.0
t9minrun3                  7             64           4,590,432        20,977.4    1,256,564          0.0
t9minrun3                  8             64           4,686,173        29,605.7    1,304,008          0.0
t9minrun3                  9             64           4,678,325       159,933.0    1,288,860          0.0
t9minrun3                 10             64           4,733,421        64,469.3    1,334,640          0.0
t9minrun3                 11             64           4,748,046        31,749.3    1,340,624          0.0
t9minrun3                 12             64           4,941,649        97,238.5    1,402,078          0.0
t9minrun3                 13             64           4,672,816        27,054.1    1,354,403          0.0
t9minrun3                 14             64           4,829,153        18,184.0    1,392,275          0.0
t9minrun3                 15             64           4,776,938        48,240.7    1,393,460          0.0
t9minrun3                 16             64           4,870,298        14,032.0    1,441,508          0.0
t9minrun3                 17             64           4,871,258        15,835.8    1,426,520          0.0
t9minrun3                 18             64           4,996,948        66,962.7    1,472,176          0.0
t9minrun3                 19             64           5,000,565        53,894.6    1,475,772          0.0
t9minrun3                 20             64           5,147,723        16,347.5    1,519,640          0.0
t9minrun3                 21             64           5,047,019        34,566.2    1,521,893          0.0
t9minrun3                 22             64           5,296,715        65,439.0    1,572,419          0.0
t9minrun3                 23             64           5,216,613        77,135.8    1,577,705          0.0
t9minrun3                 24             64           5,434,596        89,234.6    1,635,390          0.0
t9minrun3                 25             64           5,247,820        41,133.8    1,588,800          0.0
t9minrun3                 26             64           5,390,832        17,348.6    1,635,161          0.0
t9minrun3                 27             64           5,224,114         9,578.9    1,630,360          0.0
t9minrun3                 28             64           5,481,878        65,780.8    1,674,384          0.0
t9minrun3                 29             64           5,505,567        25,632.7    1,672,506          0.0
t9minrun3                 30             64           5,559,440       111,337.0    1,723,427          0.0
t9minrun4                  1             64           5,160,185        96,207.5    1,279,007          0.0
t9minrun4                  2             64           5,343,966        17,170.6    1,329,007          0.0
t9minrun4                  3             64           5,147,093        64,092.8    1,327,082          0.0
t9minrun4                  4             64           4,941,158        10,135.5    1,304,007          0.0
t9minrun4                  5             64           4,790,709        13,270.2    1,284,639          0.0
t9minrun4                  6             64           5,280,490     1,342,380.2    1,343,748          0.0
t9minrun4                  7             64           4,734,560        64,169.5    1,285,135          0.0
t9minrun4                  8             64           4,877,611        70,491.5    1,329,007          0.0
t9minrun4                  9             64           4,754,238        21,489.1    1,311,082          0.0
t9minrun4                 10             64           4,889,950        13,493.7    1,354,639          0.0
t9minrun4                 11             64           4,887,391        25,302.2    1,358,805          0.0
t9minrun4                 12             64           5,100,350        69,990.3    1,418,745          0.0
t9minrun4                 13             64           4,816,452        40,283.0    1,369,788          0.0
t9minrun4                 14             64           4,972,268        63,271.0    1,406,560          0.0
t9minrun4                 15             64           4,944,394        49,962.0    1,406,793          0.0
t9minrun4                 16             64           5,152,666        18,398.2    1,454,007          0.0
t9minrun4                 17             64           5,036,951       117,524.8    1,438,285          0.0
t9minrun4                 18             64           5,150,603        47,377.7    1,483,287          0.0
t9minrun4                 19             64           5,210,109        32,649.7    1,486,299          0.0
t9minrun4                 20             64           5,364,240       100,219.5    1,529,639          0.0
t9minrun4                 21             64           5,311,773        52,459.3    1,531,416          0.0
t9minrun4                 22             64           5,517,669        31,537.2    1,581,510          0.0
t9minrun4                 23             64           5,451,688        43,308.9    1,586,400          0.0
t9minrun4                 24             64           5,671,254        74,696.6    1,643,723          0.0
t9minrun4                 25             64           5,395,692        70,918.6    1,596,799          0.0
t9minrun4                 26             64           5,756,951     1,404,358.7    1,642,854          0.0
t9minrun4                 27             64           5,592,088        91,941.2    1,637,767          0.0
t9minrun4                 28             64           5,776,896        77,052.2    1,681,527          0.0
t9minrun4                 29             64           5,649,560        56,281.6    1,679,403          0.0
t9minrun4                 30             64           5,945,746        63,755.8    1,730,094          0.0

This experiment uses an input of alternating sequences, where each run is no longer than 2
The results are very similar to our results from random sequences, which confirms our suspicions that
run lengths will generally be low and not determine much for random inputs
However, in this more controlled case, a more clear pattern emerges regarding an optimal value for c
It seems to lie around 5-15 for the different algorithms
Running all sorting algorithms on 100 runs, on array of size 1000000
# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
t9runs1                    1              2         324,573,480    20,667,641.6   13,785,157          0.0
t9runs1                    2              2         293,298,375    18,954,292.1   13,785,157          0.0
t9runs1                    3              2         299,132,209    17,870,768.4   14,037,644          0.0
t9runs1                    4              2         307,524,792     7,234,763.0   14,285,098          0.0
t9runs1                    5              2         277,029,209     6,832,301.2   14,660,146          0.0
t9runs1                    6              2         315,702,750     2,297,508.0   15,038,521          0.0
t9runs1                    7              2         288,418,354     7,601,898.5   15,413,503          0.0
t9runs1                    8              2         305,043,521     4,002,194.7   15,784,831          0.0
t9runs1                    9              2         306,000,500     5,923,139.3   16,224,733          0.0
t9runs1                   10              2         305,938,313    14,793,881.6   16,659,654          0.0
t9runs1                   11              2         314,680,791     1,027,249.4   17,100,812          0.0
t9runs1                   12              2         306,509,250     4,772,853.4   17,535,653          0.0
t9runs1                   13              2         303,534,959    17,397,419.8   17,974,834          0.0
t9runs1                   14              2         308,304,354     7,248,875.5   18,409,556          0.0
t9runs1                   15              2         297,157,208     7,698,801.9   18,848,362          0.0
t9runs1                   16              2         301,408,979     2,856,917.9   19,283,780          0.0
t9runs1                   17              2         296,790,479     7,284,820.5   19,752,227          0.0
t9runs1                   18              2         319,592,167     6,545,452.0   20,222,618          0.0
t9runs1                   19              2         335,751,125    13,193,080.2   20,687,895          0.0
t9runs1                   20              2         313,177,875    13,963,414.4   21,157,923          0.0
t9runs1                   21              2         314,463,375     9,407,054.5   21,624,581          0.0
t9runs1                   22              2         333,232,417     2,990,237.2   22,094,420          0.0
t9runs1                   23              2         336,271,417    21,801,456.9   22,560,265          0.0
t9runs1                   24              2         334,566,938     5,565,195.5   23,029,997          0.0
t9runs1                   25              2         340,947,084     7,205,772.4   23,499,620          0.0
t9runs1                   26              2         372,024,271    16,008,101.3   23,964,188          0.0
t9runs1                   27              2         335,320,521    34,490,104.8   24,435,307          0.0
t9runs1                   28              2         340,223,084    17,697,527.2   24,900,729          0.0
t9runs1                   29              2         317,511,667     1,353,224.9   25,368,970          0.0
t9runs1                   30              2         349,015,188     8,807,987.2   25,835,939          0.0
t9runs2                    1              2         218,782,188    15,470,111.2    7,688,743          0.0
t9runs2                    2              2         226,157,375     4,193,201.9    7,688,743          0.0
t9runs2                    3              2         234,621,230     7,110,460.0    7,688,743          0.0
t9runs2                    4              2         231,974,021    21,999,830.0    7,688,743          0.0
t9runs2                    5              2         231,169,521     1,426,146.0    7,688,743          0.0
t9runs2                    6              2         242,219,000     2,446,235.9    7,688,743          0.0
t9runs2                    7              2         221,401,750     7,941,574.9    7,688,743          0.0
t9runs2                    8              2         226,344,792    13,080,473.5    7,688,743          0.0
t9runs2                    9              2         221,778,583    16,360,270.2    7,688,743          0.0
t9runs2                   10              2         237,958,938     1,385,251.2    7,688,743          0.0
t9runs2                   11              2         245,534,772     9,612,144.4    7,688,743          0.0
t9runs2                   12              2         241,562,563     5,210,640.9    7,688,743          0.0
t9runs2                   13              2         241,913,979    14,216,058.0    7,688,743          0.0
t9runs2                   14              2         230,351,959     6,937,306.5    7,688,743          0.0
t9runs2                   15              2         243,224,354    15,791,491.9    7,688,743          0.0
t9runs2                   16              2         234,050,750     7,199,761.2    7,688,743          0.0
t9runs2                   17              2         249,073,938     8,202,644.4    7,688,743          0.0
t9runs2                   18              2         251,591,646     5,447,286.2    7,688,743          0.0
t9runs2                   19              2         240,554,792     3,336,718.8    7,688,743          0.0
t9runs2                   20              2         247,374,792     1,856,861.7    7,688,743          0.0
t9runs2                   21              2         251,572,771    27,363,294.4    7,688,743          0.0
t9runs2                   22              2         247,286,042     6,208,397.5    7,688,743          0.0
t9runs2                   23              2         244,251,375     8,920,034.7    7,688,743          0.0
t9runs2                   24              2         258,451,854     1,526,201.6    7,688,743          0.0
t9runs2                   25              2         239,196,938     9,776,900.3    7,688,743          0.0
t9runs2                   26              2         244,120,313     6,819,839.1    7,688,743          0.0
t9runs2                   27              2         268,375,479    19,648,052.3    7,688,743          0.0
t9runs2                   28              2         249,772,750     5,405,359.7    7,688,743          0.0
t9runs2                   29              2         217,347,209     9,726,018.3    7,688,743          0.0
t9runs2                   30              2         229,206,917    18,577,462.9    7,688,743          0.0
t9runs3                    1              2         323,260,646    30,150,650.6   13,785,157          0.0
t9runs3                    2              2         289,529,584     3,341,315.0   13,785,157          0.0
t9runs3                    3              2         311,357,897     6,758,968.6   14,372,176          0.0
t9runs3                    4              2         290,653,708    11,750,110.8   14,285,098          0.0
t9runs3                    5              2         288,920,583    14,393,452.7   14,950,152          0.0
t9runs3                    6              2         320,720,500     2,770,974.7   15,371,761          0.0
t9runs3                    7              2         309,389,834     6,932,416.2   15,977,028          0.0
t9runs3                    8              2         315,286,375    16,030,287.5   15,784,831          0.0
t9runs3                    9              2         319,726,667     7,563,272.8   16,239,715          0.0
t9runs3                   10              2         322,629,876    11,797,605.0   16,949,736          0.0
t9runs3                   11              2         329,493,042    16,301,226.8   17,295,171          0.0
t9runs3                   12              2         348,514,854     6,967,388.3   17,870,060          0.0
t9runs3                   13              2         330,709,188     1,020,325.4   18,222,334          0.0
t9runs3                   14              2         338,084,209       362,274.1   18,974,615          0.0
t9runs3                   15              2         354,174,875     3,116,042.8   19,670,897          0.0
t9runs3                   16              2         300,971,125    34,707,098.9   19,283,780          0.0
t9runs3                   17              2         295,485,917    23,080,495.7   19,791,129          0.0
t9runs3                   18              2         313,686,313    17,229,746.4   20,235,664          0.0
t9runs3                   19              2         320,711,979     5,521,413.6   20,749,191          0.0
t9runs3                   20              2         322,419,458    11,221,431.1   21,448,035          0.0
t9runs3                   21              2         320,253,501     9,187,910.0   21,730,289          0.0
t9runs3                   22              2         329,213,209     3,597,347.1   22,289,217          0.0
t9runs3                   23              2         302,625,854     1,264,336.6   22,799,944          0.0
t9runs3                   24              2         313,012,438     8,839,807.0   23,363,153          0.0
t9runs3                   25              2         324,135,813       589,756.0   23,728,814          0.0
t9runs3                   26              2         331,344,730     8,486,901.4   24,213,639          0.0
t9runs3                   27              2         370,969,750    25,698,912.1   24,979,131          0.0
t9runs3                   28              2         348,984,729    27,376,964.2   25,464,972          0.0
t9runs3                   29              2         361,449,334     2,835,793.1   26,031,855          0.0
t9runs3                   30              2         387,577,604     2,633,589.5   26,660,256          0.0
t9runs4                    1              2         277,485,459    37,772,407.5    8,530,866          0.0
t9runs4                    2              2         249,041,896     4,868,165.0    8,530,866          0.0
t9runs4                    3              2         258,968,105     4,103,369.6    8,530,866          0.0
t9runs4                    4              2         245,664,271    12,581,345.2    8,530,866          0.0
t9runs4                    5              2         261,321,854     6,118,565.3    8,530,866          0.0
t9runs4                    6              2         268,965,188     1,025,806.2    8,530,866          0.0
t9runs4                    7              2         256,690,125    24,404,257.5    8,530,866          0.0
t9runs4                    8              2         273,927,042    10,903,468.5    8,530,866          0.0
t9runs4                    9              2         284,004,583     7,049,030.1    8,530,866          0.0
t9runs4                   10              2         273,946,833     3,076,268.1    8,530,866          0.0
t9runs4                   11              2         273,285,813     3,668,735.1    8,530,866          0.0
t9runs4                   12              2         283,649,521     2,434,538.9    8,530,866          0.0
t9runs4                   13              2         270,790,958     6,799,892.4    8,530,866          0.0
t9runs4                   14              2         268,845,583     7,134,590.0    8,530,866          0.0
t9runs4                   15              2         264,337,209    11,545,934.4    8,530,866          0.0
t9runs4                   16              2         276,749,146    25,674,310.4    8,530,866          0.0
t9runs4                   17              2         263,357,146    10,235,930.0    8,530,866          0.0
t9runs4                   18              2         272,436,417     7,810,288.6    8,530,866          0.0
t9runs4                   19              2         286,687,104     2,731,583.2    8,530,866          0.0
t9runs4                   20              2         271,631,647     6,079,615.7    8,530,866          0.0
t9runs4                   21              2         254,567,396     7,157,305.1    8,530,866          0.0
t9runs4                   22              2         247,224,709     2,031,930.0    8,530,866          0.0
t9runs4                   23              2         248,386,500       610,586.7    8,530,866          0.0
t9runs4                   24              2         244,867,833     9,289,202.4    8,530,866          0.0
t9runs4                   25              2         263,648,271     9,627,053.1    8,530,866          0.0
t9runs4                   26              2         286,362,292     7,062,877.4    8,530,866          0.0
t9runs4                   27              2         264,220,167     3,184,279.3    8,530,866          0.0
t9runs4                   28              2         253,991,396       885,091.2    8,530,866          0.0
t9runs4                   29              2         274,314,271       960,869.7    8,530,866          0.0
t9runs4                   30              2         255,659,104    13,790,084.8    8,530,866          0.0

For this experiment we have split the input array into runs of decreasing sequences.
The improvement of the adaptive algorithms over the non-adaptive ones are very apparent
both in terms of running time and compares. The adaptive variants doesn't seem to change
much in their performance, when their c-values change
Running all sorting algorithms on a size 100000 array with c-value 10for various
amount of runs in array
# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
t9differentRuns1           1             32          12,034,470       849,848.8    1,226,443          0.0
t9differentRuns1           2             64           4,881,512       157,610.3    1,158,970          0.0
t9differentRuns1           4             64           4,978,518        30,954.7    1,248,901          0.0
t9differentRuns1           8             64           5,162,491       416,887.6    1,306,338          0.0
t9differentRuns1          16             64           5,559,004       156,730.0    1,369,248          0.0
t9differentRuns1          32             64           5,948,630        81,264.0    1,430,607          0.0
t9differentRuns1          64             32           6,485,258       582,955.7    1,502,158          0.0
t9differentRuns1         128             32           6,691,786        86,428.8    1,551,166          0.0
t9differentRuns1         256             32           6,933,049        99,713.4    1,593,920          0.0
t9differentRuns1         512             32           7,256,287       456,738.6    1,635,740          0.0
t9differentRuns1       1,024             32           7,163,968       109,991.5    1,674,389          0.0
t9differentRuns1       2,048             32           6,880,654       199,306.7    1,691,208          0.0
t9differentRuns1       4,096             32           6,819,672       422,950.9    1,687,421          0.0
t9differentRuns1       8,192             64           6,001,954       211,279.9    1,632,134          0.0
t9differentRuns2           1            256           1,978,213       616,595.8      164,420          0.0
t9differentRuns2           2            256           1,362,132       820,541.7      199,998          0.0
t9differentRuns2           4            256           2,383,933     1,456,119.7      324,992          0.0
t9differentRuns2           8            256           3,170,954     1,305,118.1      412,478          0.0
t9differentRuns2          16            128           3,059,819       939,865.9      512,439          0.0
t9differentRuns2          32             64           3,777,813       174,375.5      634,204          0.0
t9differentRuns2          64             64           3,389,856       405,856.5      741,649          0.0
t9differentRuns2         128             64           3,962,551       320,210.2      840,272          0.0
t9differentRuns2         256             64           4,449,825        94,133.0      938,324          0.0
t9differentRuns2         512             64           4,877,346       188,269.0    1,035,227          0.0
t9differentRuns2       1,024             64           5,249,338       470,974.4    1,130,205          0.0
t9differentRuns2       2,048             64           5,197,833       194,710.3    1,221,285          0.0
t9differentRuns2       4,096             64           5,319,450       109,656.3    1,300,774          0.0
t9differentRuns2       8,192             64           5,178,903       317,283.1    1,361,558          0.0
t9differentRuns3           1             64           4,973,466       261,441.4    1,194,414          0.0
t9differentRuns3           2             64           4,886,636        36,285.2    1,160,719          0.0
t9differentRuns3           4             64           4,994,572        39,222.7    1,239,968          0.0
t9differentRuns3           8             64           5,134,409        33,973.4    1,339,629          0.0
t9differentRuns3          16             64           5,611,171        90,900.0    1,397,571          0.0
t9differentRuns3          32             64           5,988,322       101,068.5    1,448,579          0.0
t9differentRuns3          64             32           6,435,947       112,735.7    1,500,880          0.0
t9differentRuns3         128             32           6,720,272       130,547.0    1,548,892          0.0
t9differentRuns3         256             32           6,969,724       104,944.7    1,591,523          0.0
t9differentRuns3         512             32           7,122,252       126,452.5    1,632,959          0.0
t9differentRuns3       1,024             32           7,175,003       189,820.1    1,671,016          0.0
t9differentRuns3       2,048             32           7,394,170     1,931,966.0    1,685,634          0.0
t9differentRuns3       4,096             32           6,618,314        93,960.3    1,680,338          0.0
t9differentRuns3       8,192             64           6,042,660       148,018.4    1,622,300          0.0
t9differentRuns4           1            512             446,194        29,976.5      164,420          0.0
t9differentRuns4           2            512             488,514        79,383.0      199,998          0.0
t9differentRuns4           4            256             807,347        86,079.3      299,994          0.0
t9differentRuns4           8            256           1,181,066        96,834.6      399,982          0.0
t9differentRuns4          16            128           1,870,468       114,802.4      499,950          0.0
t9differentRuns4          32            128           2,527,279       119,728.6      599,868          0.0
t9differentRuns4          64             64           3,533,844       153,895.7      799,201          0.0
t9differentRuns4         128             64           4,031,484       131,208.8      898,333          0.0
t9differentRuns4         256             64           4,591,383       171,392.8      995,366          0.0
t9differentRuns4         512             64           5,000,318       161,683.9    1,091,348          0.0
t9differentRuns4       1,024             64           5,306,571       156,766.6    1,180,918          0.0
t9differentRuns4       2,048             64           5,283,464       126,380.2    1,263,681          0.0
t9differentRuns4       4,096             64           5,339,962       113,893.1    1,339,495          0.0
t9differentRuns4       8,192             64           5,315,079       127,573.6    1,394,626          0.0

Now we keep a constant c value of 10 and split the array into increasingly many runs
As can be seen both with regards to compares and running time, it the adaptive algorithms
gets increasingly better, as their c-value approaches the size of the runs in the input
=====================================================================
Task 10: Include InsertionSort, plain MergeSort and Arrays.sort()
into the comparison. How do the algorithms compare in a horserace?
=====================================================================

Here is a comparisson for all algorithms (except insertion sort) for random arrays of various sizes: 
# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
t10random1           500,000              4          75,317,719     1,333,645.8    9,351,391        830.3
t10random1           550,000              2         107,499,730     1,084,554.0   10,742,018      2,100.1
t10random1           605,000              2         118,360,604     1,834,264.7   11,738,290      1,710.5
t10random1           665,500              2         132,872,187     2,527,759.7   12,950,337        406.6
t10random1           732,050              2         138,520,188       750,505.5   14,204,124      2,814.3
t10random1           805,255              2         163,039,021     4,943,708.1   15,819,746        524.0
t10random1           885,780              2         180,882,209     4,081,655.8   17,369,362        635.7
t10random1           974,358              2         211,802,667     2,689,067.7   19,151,197        545.2
t10random1         1,071,793              2         266,560,480    22,859,966.7   22,086,144      1,063.5
t10random1         1,178,972              2         299,323,771    16,241,329.2   24,039,990      1,787.6
t10random1         1,296,869              2         498,512,688    18,066,726.0   26,372,726      1,153.3
t10random1         1,426,555              2         554,820,896    35,774,388.2   29,064,328      1,469.4
t10random1         1,569,210              2         659,298,542     2,861,248.9   31,996,570      3,380.0
t10random1         1,726,131              2         769,004,875    37,940,344.7   35,565,267        457.5
t10random1         1,898,744              2         881,397,854    37,707,205.9   39,219,558         39.6
t10random1         2,088,618              2         972,503,438    28,220,425.2   43,274,570        618.0
t10random1         2,297,479              2       1,189,000,000    15,405,322.5   49,289,927      3,302.2
t10random1         2,527,226              2       1,331,336,334    18,164,100.3   53,990,283        229.1
t10random1         2,779,948              2       1,461,116,146     1,540,343.0   59,490,085        574.9
t10random2           500,000              4          69,223,500        89,621.7    9,456,460        320.0
t10random2           550,000              4         101,666,208     2,560,832.5   10,363,985      1,190.1
t10random2           605,000              2         113,817,250     1,167,963.6   11,452,364      1,574.0
t10random2           665,500              2         128,544,500       485,959.1   13,239,180      1,054.3
t10random2           732,050              2         143,860,875     3,533,942.9   14,395,230      1,510.4
t10random2           805,255              2         161,068,500     5,677,064.8   15,785,789        611.6
t10random2           885,780              2         180,510,167     2,947,986.9   17,398,588      1,717.6
t10random2           974,358              2         210,312,730     2,847,136.5   19,149,570      2,856.7
t10random2         1,071,793              2         237,418,917     5,026,292.5   21,308,475      2,085.3
t10random2         1,178,972              2         294,181,438    27,904,937.5   23,495,162      1,777.0
t10random2         1,296,869              2         431,279,042       415,954.9   25,907,515      3,654.3
t10random2         1,426,555              2         594,008,313     3,332,565.3   29,550,821      1,373.2
t10random2         1,569,210              2         680,704,083    17,864,109.5   32,381,652        254.6
t10random2         1,726,131              2         730,671,687     6,599,457.3   35,701,617      2,126.3
t10random2         1,898,744              2         806,490,188    11,724,449.2   39,222,807      3,760.4
t10random2         2,088,618              2         949,314,959     2,752,413.1   43,541,721      1,767.8
t10random2         2,297,479              2       1,082,640,792    30,593,858.8   48,186,114      7,413.3
t10random2         2,527,226              2       1,185,306,708       967,204.7   52,954,736        435.6
t10random2         2,779,948              2       1,482,236,584    53,532,344.1   60,476,936      3,598.5
t10random3           500,000              2         186,177,834    80,438,935.11,531,865,955548,752,136.6
t10random3           550,000              2         102,960,563    26,489,781.3  304,387,397 76,808,433.2
t10random3           605,000              4         112,440,094    42,360,198.4  945,067,048899,128,676.2
t10random3           665,500              4         113,156,792    20,629,861.31,057,742,5461,138,192,767.0
t10random3           732,050              2         112,352,750       394,801.11,444,307,382595,129,250.2
t10random3           805,255              2         126,360,271     1,011,898.81,104,976,124834,164,148.5
t10random3           885,780              2         144,165,354     4,064,833.01,508,196,650202,224,710.3
t10random3           974,358              2         161,926,980     2,044,864.41,030,637,750786,249,715.4
t10random3         1,071,793              2         192,767,563       428,241.5  572,606,093509,085,426.8
t10random3         1,178,972              2         222,259,063     8,241,417.9  969,297,852863,058,163.5
t10random3         1,296,869              2         272,955,771     1,933,259.61,208,899,7541,277,164,205.6
t10random3         1,426,555              2         317,820,021     1,949,640.5  605,040,463441,378,886.2
t10random3         1,569,210              2         369,719,688     1,932,611.21,199,398,5211,122,511,625.0
t10random3         1,726,131              2         430,421,291     1,210,036.5  891,892,164337,412,626.8
t10random3         1,898,744              2         492,094,625     3,425,519.41,004,518,159566,265,518.4
t10random3         2,088,618              2         569,516,625     6,356,359.6  675,595,343780,128,596.1
t10random3         2,297,479              2         637,785,542       613,650.61,772,674,314297,150,236.1
t10random3         2,527,226              2         737,938,855    22,745,828.41,022,010,255112,116,790.7
t10random3         2,779,948              2         839,632,354    16,508,615.51,441,006,025663,488,446.1
t10random4           500,000              4          74,681,865     1,200,308.9    8,836,642        578.3
t10random4           550,000              2         118,081,438    14,854,103.8    9,797,210        492.9
t10random4           605,000              2         120,626,854     1,532,330.1   10,866,656        101.1
t10random4           665,500              2         132,076,730     4,634,819.8   12,046,697        453.3
t10random4           732,050              2         147,101,313     1,769,976.7   13,352,937        537.4
t10random4           805,255              2         160,477,813       807,840.5   14,795,091        522.6
t10random4           885,780              2         184,859,105     2,004,736.1   16,395,299        395.3
t10random4           974,358              2         227,046,896    11,938,584.4   18,161,830        325.3
t10random4         1,071,793              2         248,385,209     8,248,930.2   20,119,197        457.5
t10random4         1,178,972              2         292,435,521    16,037,978.0   22,307,584        166.2
t10random4         1,296,869              2         492,922,834    61,480,931.4   24,723,835        468.1
t10random4         1,426,555              2         576,753,605    41,503,544.1   27,394,914        823.8
t10random4         1,569,210              2         659,459,688    23,586,519.0   30,341,299        758.0
t10random4         1,726,131              2         780,562,479    30,840,019.6   33,612,734        456.1
t10random4         1,898,744              2         853,137,313       660,054.5   37,224,174        263.0
t10random4         2,088,618              2         973,571,813    18,885,496.3   41,209,111        731.1
t10random4         2,297,479              2       1,142,603,708    18,928,364.6   45,678,189        571.3
t10random4         2,527,226              2       1,216,100,042    22,922,104.5   50,609,987        534.6
t10random4         2,779,948              2       1,370,689,333    13,296,612.7   56,060,170        357.1
In general the algorithms scale similarly (Insertion-sort was too slow to be benchmarked here)
In general the java-library version performs better, which is expected, as it is unstable

Here is a comparisson for all algorithms (except insertion sort) for arrays split into different amounts of runs
# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
t10runs1                   1              2         576,559,896    51,930,128.5   18,792,380          0.0
t10runs1                   2              2         600,125,209    23,552,961.1   17,787,086          0.0
t10runs1                   3              2         645,723,771    15,221,091.5   17,336,300          0.0
t10runs1                   4              2         579,246,021    44,129,326.5   17,093,870          0.0
t10runs1                   5              2         686,280,209    22,905,604.8   16,845,064          0.0
t10runs1                   6              2         607,214,959    12,732,695.7   16,790,635          0.0
t10runs1                   7              2         613,590,563    24,075,129.7   16,705,335          0.0
t10runs1                   8              2         555,919,521    27,455,747.9   16,640,490          0.0
t10runs1                   9              2         568,525,104    31,380,072.4   16,574,699          0.0
t10runs1                  10              2         559,881,750    21,427,574.9   16,539,215          0.0
t10runs1                  11              2         620,532,250    13,560,363.5   16,512,821          0.0
t10runs1                  12              2         569,312,354    18,325,585.8   16,443,562          0.0
t10runs1                  13              2         524,950,313    13,041,258.8   16,429,684          0.0
t10runs1                  14              2         557,760,271     9,138,501.0   16,422,936          0.0
t10runs1                  15              2         518,198,750    34,142,591.5   16,414,974          0.0
t10runs1                  16              2         534,463,833    46,330,343.4   16,377,714          0.0
t10runs1                  17              2         545,025,875     4,934,308.5   16,387,376          0.0
t10runs1                  18              2         511,274,667    22,753,694.2   16,337,647          0.0
t10runs1                  19              2         534,117,021     5,918,630.8   16,356,463          0.0
t10runs1                  20              2         499,974,167     8,704,190.3   16,392,326          0.0
t10runs1                  21              2         515,017,605    32,521,637.6   16,370,042          0.0
t10runs1                  22              2         498,620,896     8,811,640.1   16,373,632          0.0
t10runs1                  23              2         533,817,188    15,200,881.7   16,390,210          0.0
t10runs1                  24              2         509,956,563     2,019,408.6   16,422,712          0.0
t10runs1                  25              2         528,609,646     7,456,175.1   16,224,523          0.0
t10runs1                  26              2         488,885,416    30,349,199.8   16,311,978          0.0
t10runs1                  27              2         505,287,188    17,574,637.7   16,355,797          0.0
t10runs1                  28              2         490,668,354     8,683,301.0   16,344,659          0.0
t10runs1                  29              2         472,249,563    21,320,241.7   16,361,670          0.0
t10runs1                  30              2         470,041,438    16,709,728.7   16,394,976          0.0
t10runs2                   1              2         671,444,000    38,538,026.7   19,711,087          0.0
t10runs2                   2              2         736,168,126    27,057,382.3   18,222,292          0.0
t10runs2                   3              2         635,226,813    25,144,805.5   17,932,455          0.0
t10runs2                   4              2         694,847,500     3,430,115.6   18,151,123          0.0
t10runs2                   5              2         691,765,625     9,928,899.3   18,743,706          0.0
t10runs2                   6              2         614,356,334    28,786,906.1   17,490,455          0.0
t10runs2                   7              2         637,878,250    31,653,222.8   18,092,578          0.0
t10runs2                   8              2         657,530,188    24,025,749.6   18,134,938          0.0
t10runs2                   9              2         590,381,521    24,665,740.7   16,818,479          0.0
t10runs2                  10              2         625,470,584     5,472,534.8   18,552,750          0.0
t10runs2                  11              2         569,114,042     6,843,261.3   17,146,528          0.0
t10runs2                  12              2         609,862,479     4,835,579.4   17,924,327          0.0
t10runs2                  13              2         606,475,146    16,083,586.4   17,460,336          0.0
t10runs2                  14              2         600,102,417     2,373,522.0   16,925,563          0.0
t10runs2                  15              2         574,953,250    24,122,594.3   17,267,427          0.0
t10runs2                  16              2         602,822,105    21,900,246.1   17,823,619          0.0
t10runs2                  17              2         546,969,813    31,557,144.0   17,474,439          0.0
t10runs2                  18              2         602,872,417    60,866,160.7   18,112,325          0.0
t10runs2                  19              2         605,302,125    21,601,876.0   17,771,791          0.0
t10runs2                  20              2         576,731,563     6,065,356.2   17,670,726          0.0
t10runs2                  21              2         527,251,230    23,391,534.3   17,734,962          0.0
t10runs2                  22              2         552,684,000     9,076,128.5   17,937,430          0.0
t10runs2                  23              2         517,435,938     2,778,959.3   17,697,266          0.0
t10runs2                  24              2         493,971,501    31,669,780.4   16,894,387          0.0
t10runs2                  25              2         511,932,730    19,632,260.5   17,044,406          0.0
t10runs2                  26              2         509,057,605    27,603,828.8   16,717,106          0.0
t10runs2                  27              2         515,032,959     5,156,281.3   16,883,822          0.0
t10runs2                  28              2         495,677,813       654,869.3   17,020,389          0.0
t10runs2                  29              2         520,025,167    19,551,914.7   17,640,160          0.0
t10runs2                  30              2         497,364,896    40,067,115.4   17,530,713          0.0
t10runs3                   1              4          69,027,156     3,679,020.1  380,894,366          0.0
t10runs3                   2              4          81,951,875     1,576,953.4  237,852,351          0.0
t10runs3                   3              4          81,867,594    10,973,304.9  608,188,624          0.0
t10runs3                   4              4          81,188,948     8,698,479.21,451,270,520          0.0
t10runs3                   5              4          80,715,687    10,127,179.01,608,446,010          0.0
t10runs3                   6              4          81,168,042     7,673,313.0  992,136,656          0.0
t10runs3                   7              4          70,751,854       481,285.8  511,833,308          0.0
t10runs3                   8              4          84,218,896     9,297,584.81,297,685,781          0.0
t10runs3                   9              4          92,595,062     3,020,168.11,705,929,636          0.0
t10runs3                  10              4          81,682,406     3,433,589.11,221,555,852          0.0
t10runs3                  11              4          84,005,271     7,970,960.51,509,514,333          0.0
t10runs3                  12              4          84,373,938    16,712,081.91,556,956,098          0.0
t10runs3                  13              4          87,819,323    10,935,581.51,252,585,652          0.0
t10runs3                  14              4          81,054,063     1,168,756.62,036,368,507          0.0
t10runs3                  15              4          90,838,969    15,751,053.21,785,210,046          0.0
t10runs3                  16              4          88,942,188     3,693,954.41,552,787,810          0.0
t10runs3                  17              2         100,866,396       150,642.71,361,960,727          0.0
t10runs3                  18              4          88,316,396     8,086,466.7  739,498,517          0.0
t10runs3                  19              4          86,876,646     6,363,813.2  125,130,493          0.0
t10runs3                  20              2         101,992,688    17,298,159.0  914,504,136          0.0
t10runs3                  21              2         102,944,688     8,516,717.2  166,239,592          0.0
t10runs3                  22              4          93,410,292     3,900,657.5  991,505,714          0.0
t10runs3                  23              4          88,926,479     7,722,269.1  385,242,642          0.0
t10runs3                  24              4          87,156,010       728,140.0  824,009,085          0.0
t10runs3                  25              4          90,932,656     3,757,703.02,085,857,771          0.0
t10runs3                  26              4          93,437,396     5,200,197.0  248,609,774          0.0
t10runs3                  27              4         103,211,667     8,250,953.5  708,049,632          0.0
t10runs3                  28              2         105,064,417        19,975.81,887,400,018          0.0
t10runs3                  29              4         100,692,792     8,715,621.0  285,377,351          0.0
t10runs3                  30              4          92,532,031     1,583,221.1  344,560,770          0.0
t10runs4                   1              2         663,680,250    41,285,019.1   19,711,087          0.0
t10runs4                   2              2         611,240,667    11,236,457.1   18,222,292          0.0
t10runs4                   3              2         680,497,167     9,895,193.6   17,932,455          0.0
t10runs4                   4              2         693,071,188    16,083,821.9   18,151,123          0.0
t10runs4                   5              2         687,891,730    20,591,214.6   18,743,706          0.0
t10runs4                   6              2         668,919,542     4,432,498.2   17,490,455          0.0
t10runs4                   7              2         672,753,709     6,033,447.3   18,092,578          0.0
t10runs4                   8              2         700,570,750    37,023,639.4   18,134,938          0.0
t10runs4                   9              2         594,355,438     3,117,309.2   16,818,479          0.0
t10runs4                  10              2         674,667,375    40,023,716.7   18,552,750          0.0
t10runs4                  11              2         595,588,938    29,449,671.6   17,146,528          0.0
t10runs4                  12              2         602,327,834     6,707,438.9   17,924,327          0.0
t10runs4                  13              2         625,941,396    37,251,887.8   17,460,336          0.0
t10runs4                  14              2         567,948,646    16,554,460.1   16,925,563          0.0
t10runs4                  15              2         567,782,501    26,152,462.4   17,267,427          0.0
t10runs4                  16              2         549,660,521    19,820,939.2   17,823,619          0.0
t10runs4                  17              2         539,933,542    26,137,908.0   17,474,439          0.0
t10runs4                  18              2         577,504,563    12,235,451.9   18,112,325          0.0
t10runs4                  19              2         570,090,000     6,793,057.5   17,771,791          0.0
t10runs4                  20              2         573,599,396    11,598,525.5   17,670,726          0.0
t10runs4                  21              2         540,861,646    16,357,294.7   17,734,962          0.0
t10runs4                  22              2         572,974,958    13,969,895.7   17,937,430          0.0
t10runs4                  23              2         559,132,438    27,024,943.1   17,697,266          0.0
t10runs4                  24              2         519,786,334     3,693,690.4   16,894,387          0.0
t10runs4                  25              2         516,688,250     6,388,709.8   17,044,406          0.0
t10runs4                  26              2         561,995,229     6,547,425.5   16,717,106          0.0
t10runs4                  27              2         507,641,625    32,893,900.4   16,883,822          0.0
t10runs4                  28              2         493,493,542    21,184,035.3   17,020,389          0.0
t10runs4                  29              2         504,771,063     6,218,268.0   17,640,160          0.0
t10runs4                  30              2         569,414,604    18,355,991.4   17,530,713          0.0
System info: 
# OS: Mac OS X; 15.0; aarch64
# JVM: Eclipse Adoptium; 21.0.5
# CPU: null; 8 "procs"
# Date: 2024-12-20T11:53:12+0100

=====================================================================
Task 11: Implement a parallel version of the recursive MergeSort from Task 1
=====================================================================

Parallel sort 16,000,000 size array in  3.26 seconds, and with 362,790,677 comparisons - cutoff 1,000,000
Sequential sort 16,000,000 size array in  9.97 seconds, and with 362,790,677 comparisons
=====================================================================
Task 12: Judge potential speedups and find a good choice of the parallel-cut-off parameter
=====================================================================

Results summary:
We see pretty clearly that the results improve up untill the point where the ratio between
the size of the array and the cutoff parameter exceeds the number of available processors.
n / c >= Runtime.getruntime.availableprocessors()
This is in line with expectations: Parallelism should give improvement up until around the point where
There are as many tasks ready as processors available

Potential speedup: Set the parallel cutoff automatically relative to cores and n.
Potential speedup: Run sequential mergesort with an optimal cutoff (~25).

This behavior is consistent across a range of array sizes for randomized sequences.
Results on our machines suggest that the speedup is stronger for higher array sizes.

For randomized Integer array of length 256,000
With param being the cutoff for applying sequential mergesort
# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
t12e1_0                4,000          1,024           9,672,021     2,041,980.6    4,276,527        275.8
t12e1_0                8,000          1,024           9,464,290       400,232.0    4,276,524        282.3
t12e1_0               16,000          1,024           9,711,286       443,792.4    4,276,519        286.1
t12e1_0               32,000          1,024           9,380,734       529,252.3    4,276,516        277.8
t12e1_0               64,000          1,024          10,871,201       596,470.6    4,276,514        276.0
t12e1_0              128,000            512          19,020,059       255,864.2    4,276,532        285.0
t12e1_0              256,000            256          33,658,933       312,935.8    4,276,505        276.0


For randomized Integer array of length 512,000
With param being the cutoff for applying sequential mergesort
# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
t12e1_1                8,000            512          20,030,667     1,355,424.8    9,065,051        379.8
t12e1_1               16,000            512          21,771,911     2,113,746.6    9,065,060        372.6
t12e1_1               32,000            512          20,873,453     2,244,104.5    9,065,065        400.2
t12e1_1               64,000            512          22,616,368     4,302,756.3    9,065,036        417.3
t12e1_1              128,000            512          22,846,956       713,666.2    9,065,047        412.1
t12e1_1              256,000            256          41,466,403     1,988,305.4    9,065,076        425.0
t12e1_1              512,000            128          77,002,811     4,065,576.9    9,065,015        446.6


For randomized Integer array of length 1,024,000
With param being the cutoff for applying sequential mergesort
# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
t12e1_2               16,000            128         106,177,591    20,855,250.6   19,154,079        572.0
t12e1_2               32,000             64         127,085,971     7,794,551.6   19,154,318        546.4
t12e1_2               64,000             64         130,540,893    12,634,126.2   19,154,061        507.3
t12e1_2              128,000            128         123,526,883     7,914,860.2   19,154,161        591.2
t12e1_2              256,000             64         141,943,389     6,185,517.1   19,154,089        598.7
t12e1_2              512,000             64         204,641,193    16,787,074.2   19,154,066        668.1
t12e1_2            1,024,000             32         351,980,792    12,642,707.2   19,154,130        628.2


For randomized Integer array of length 2,000,000
With param being the cutoff for applying sequential mergesort
# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
t12e1_3               31,250             32         317,588,368    15,400,333.0   39,348,437        878.5
t12e1_3               62,500             32         318,986,975    18,334,976.3   39,348,551        737.0
t12e1_3              125,000             32         319,123,262    12,683,743.1   39,348,190        626.6
t12e1_3              250,000             32         298,064,918     9,828,541.9   39,348,437      1,017.6
t12e1_3              500,000             32         361,414,824    10,001,010.7   39,348,369        797.0
t12e1_3            1,000,000             16         525,406,352    11,985,801.0   39,348,471        731.1
t12e1_3            2,000,000             16         858,418,755    22,414,779.9   39,348,656        625.5


For randomized Integer array of length 4,000,000
With param being the cutoff for applying sequential mergesort
# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
t12e1_4               62,500             16         733,372,800    51,773,666.4   82,696,892        931.4
t12e1_4              125,000             16         726,474,099    37,689,743.5   82,696,862      1,122.2
t12e1_4              250,000             16         762,414,456    52,237,932.8   82,697,025        909.8
t12e1_4              500,000             16         693,847,953    21,668,621.9   82,697,129        958.1
t12e1_4            1,000,000             16         839,421,018    33,245,270.8   82,697,060      1,117.3
t12e1_4            2,000,000              8       1,257,486,714    31,515,008.3   82,697,260        936.3
t12e1_4            4,000,000              4       2,089,489,188    53,181,176.7   82,696,188      1,542.7


For randomized Integer array of length 8,000,000
With param being the cutoff for applying sequential mergesort
# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
t12e1_5              125,000              8       1,724,880,948    79,272,319.8  173,394,420      2,108.1
t12e1_5              250,000              8       1,644,932,125    93,032,109.6  173,393,054      1,951.5
t12e1_5              500,000              8       1,657,448,719    98,247,029.8  173,393,938        597.0
t12e1_5            1,000,000              8       1,538,676,990    84,315,042.3  173,394,270        576.5
t12e1_5            2,000,000              8       1,888,922,375    30,062,186.1  173,393,421      1,471.4
t12e1_5            4,000,000              4       2,865,831,604    42,135,395.2  173,395,222      2,201.9
t12e1_5            8,000,000              2       4,699,989,854    19,567,736.3  173,394,668        977.9


For randomized Integer array of length 16,000,000
With param being the cutoff for applying sequential mergesort
# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
t12e1_6              250,000              4       2,928,617,656    99,200,549.1  362,789,050      1,903.1
t12e1_6              500,000              4       2,882,465,396   181,680,353.0  362,788,052      3,219.1
t12e1_6            1,000,000              4       3,151,117,677   333,023,660.1  362,787,530      1,211.6
t12e1_6            2,000,000              4       2,774,178,354    62,195,671.2  362,789,381      2,310.5
t12e1_6            4,000,000              4       3,316,782,094   110,856,852.2  362,787,209      3,643.8
t12e1_6            8,000,000              2       5,654,210,875   233,395,325.0  362,786,122      3,754.7
t12e1_6           16,000,000              2      10,264,781,667   202,153,402.1  362,788,497        261.6


For randomized Integer array of length 32,000,000
With param being the cutoff for applying sequential mergesort
# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
t12e1_7              500,000              2       5,808,795,479   293,806,315.4  757,577,274      3,242.1
t12e1_7            1,000,000              2       5,651,005,459   322,811,274.9  757,577,424      3,285.9
t12e1_7            2,000,000              2       6,007,102,709   233,929,072.5  757,576,056      1,603.7
t12e1_7            4,000,000              2       5,671,461,979   165,602,904.8  757,579,622      5,801.8
t12e1_7            8,000,000              2       7,465,297,542   166,975,076.0  757,578,020        759.4
t12e1_7           16,000,000              2      12,465,422,250     1,975,302.8  757,577,754      3,956.3
t12e1_7           32,000,000              2      22,402,436,479   149,839,138.6  757,576,882        460.3

=====================================================================
Task 13: Implement twoSequenceSelect() with binary search.
=====================================================================

Our implementation has the signature MergeParallel.twoSequenceSelect(T[] in, int lo, int mid, int hi, int k)
Rather than use explicit sequences, as per the task description, we translate implicitly from a normal
merge range, as it is used in our sequential implementation (See the javadoc for specifics).
The result given is a pair of integers: i_a, from which i_b can be derived, as well as the comparison count.
to use i_a and i_b, they must be translated back into indexes in the input array (i_a+lo, i_b+mid+1)


twoSequenceSelect gives correct output for a test array.

=====================================================================
Task 14: 
=====================================================================

We have implemented a parallel version of merge using twoSequenceSelect to
split the input merge sequence into p parts.
The parts are created with as even size as possible, by rounding increment value

=====================================================================
Task 15: 
=====================================================================

Our version of parallel merge sort using parallel merging can be used by specifying a
p parameter > 1 when calling the function.
We divide p for each layer down the recursive tree we walk. This is to avoid generating
wasteful amounts of parallel tasks, which would probably slow down the implementation.
If p falls below 2, there is no point in using a parallel framework, and we switch to
sequencial merging.
Parallel sort 16,000,000 size array in  3.41 seconds, and with 362,791,957 comparisons - cutoff 1,000,000
Sequential sort 16,000,000 size array in 10.01 seconds, and with 362,791,621 comparisons

=====================================================================
Task 16: Investigate the scaling behavior of your implementations when the
number of available threads change.
=====================================================================

active threads: 11. Available processors: 8

We see that in no case does our implementation beat Arrays.parallelSort(). However, we see that
the performance of our implementation does improve as we allow for more threads to run in
parallel.
# title                param runs      reps            meanTime        sdevTime   meanResult   sdevResult
t16_e1_control                           16         224,169,539     3,339,409.4  779,734,649493,487,390.6
t16_e1_recursive           1              2       2,025,299,667    11,322,017.0   82,696,973        152.0
t16_e1_recursive           2              2       1,181,842,021    28,852,049.0   82,697,573        567.8
t16_e1_recursive           3              2       1,035,730,375    18,647,938.1   82,697,491      1,767.8
t16_e1_recursive           4              4         815,977,396    33,313,016.1   82,697,348        512.4
t16_e1_recursive           5              4         809,566,073    21,288,366.3   82,696,782        896.4
t16_e1_recursive           6              4         853,282,469    49,086,334.1   82,697,837        994.8
t16_e1_recursive           7              4         795,423,917    17,895,157.5   82,697,064      1,136.0
t16_e1_recursive           8              4         672,015,771    17,102,515.8   82,697,382      1,044.8
t16_e1_recursive           9              4         653,191,406    15,002,525.6   82,697,257      1,449.7
t16_e1_recursive          10              4         669,922,198    22,235,703.4   82,697,319        970.7
t16_e1_recursive          11              4         647,712,334    53,285,792.3   82,698,094        936.6
t16_e1_recursive          12              4         661,352,927    16,352,495.9   82,697,355        956.1
t16_e1_recursive          13              4         637,275,979    99,152,559.7   82,698,078        887.6
t16_e1_recursive          14              4         683,787,927    22,008,172.8   82,697,266        734.5
t16_e1_recursive          15              4         678,517,646    29,523,791.7   82,697,263        667.0
t16_e1_recursive          16              4         656,015,459    31,722,498.6   82,697,221      1,174.2
=====================================================================
Task 17: 
=====================================================================

We have implemented the functionality for calculating the span.
But we ran out of time while designing the experiment.

Here is a test case showing that the correct span is returned:
Spans: left sort: 5 Right sort: 3 Merge: 4
Expected span: 9, actual span returned: 9

BUILD SUCCESSFUL in 45m 53s
2 actionable tasks: 2 executed
Configuration cache entry reused.
